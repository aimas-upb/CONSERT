    package org.aimas.consert

// Declare Metadata for CASAS events
import org.aimas.consert.tests.casas.assertions.Item
import org.aimas.consert.tests.casas.assertions.Cabinet
import org.aimas.consert.tests.casas.assertions.Water
import org.aimas.consert.tests.casas.assertions.Burner
import org.aimas.consert.tests.casas.assertions.PersonLocation
import org.aimas.consert.tests.casas.assertions.ChoosingOutfit

import org.aimas.consert.model.annotations.AnnotationData
import org.aimas.consert.model.annotations.DefaultAnnotationData
import org.aimas.consert.model.annotations.AnnotationUtils

import org.aimas.consert.tests.casas.entitydescriptions.ActivityTriggered

import org.aimas.consert.engine.core.EventTracker
import org.aimas.consert.engine.core.EventWindowManager

import org.aimas.consert.utils.AssertionLogger

import java.util.Date;

global EventTracker eventTracker;
global EventWindowManager eventWindowManager;
global AssertionLogger assertionLogger;

declare ChoosingOutfit
    @role(event)
end

rule "Wardrobe open"
    when
        //$loc : PersonLocation(location == "LivingRoom" || location == "Wardrobe") from entry-point "ExtendedPersonLocationStream"
        $Wardrobe: Cabinet(sensorId == "wardrobe", status == "OPEN") from entry-point "CabinetStream"
    then
        System.out.println("////// Triggering WARDROBE OPEN rule following events: " + $Wardrobe  + "\n");

        long ts = eventTracker.getCurrentTime();
        ActivityTriggered WardrobeOpen = new ActivityTriggered("WardrobeOpen", ts);
        eventTracker.insertStaticEvent(WardrobeOpen);
end


rule "Choosing outfit"
    when
        $WardrobeOpen: ActivityTriggered(name == "WardrobeOpen", triggerTs : timestamp)
        $loc : PersonLocation(location == "LivingRoom" || location == "Wardrobe" || location == "TV",
            locAnn : annotations#DefaultAnnotationData) 
            from entry-point "ExtendedPersonLocationStream"
    then
        System.out.println("////// Triggering CHOOSING OUTFIT rule following events: "  + $WardrobeOpen + "," + $loc + "\n");
        
        long ts = eventTracker.getCurrentTime();
        DefaultAnnotationData ann = 
            new DefaultAnnotationData(ts, locAnn.getConfidence(), 
                new Date(Math.max(locAnn.getStartTime().getTime(), triggerTs)), 
                new Date(ts));
        
        ChoosingOutfit choosingOutfit = new ChoosingOutfit(ann);
        eventTracker.insertDerivedEvent(choosingOutfit);
end


rule "Wardrobe closed"
    when
        //$loc : PersonLocation(location == "LivingRoom" || location == "Wardrobe") from entry-point "ExtendedPersonLocationStream"
        $WardrobeOpen: ActivityTriggered(name == "WardrobeOpen")

        $Wardrobe: Cabinet(sensorId == "wardrobe", status == "CLOSE") from entry-point "CabinetStream"
        not (exists Cabinet(sensorId == "wardrobe", status == "CLOSE", this after $Wardrobe) from entry-point "CabinetStream")
    then
        System.out.println("////// Triggering WARDROBE CLOSED rule following events: " + $WardrobeOpen + ", " + $Wardrobe + "\n");

        // remove the ActivityTriggered fact
        eventTracker.deleteStaticEvent($WardrobeOpen);
end
