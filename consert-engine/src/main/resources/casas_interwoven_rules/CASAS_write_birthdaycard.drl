package org.aimas.consert

// Declare Metadata for CASAS events
import org.aimas.consert.tests.casas.assertions.Item
import org.aimas.consert.tests.casas.assertions.Cabinet
import org.aimas.consert.tests.casas.assertions.Water
import org.aimas.consert.tests.casas.assertions.Burner
import org.aimas.consert.tests.casas.assertions.PersonLocation

import org.aimas.consert.model.annotations.AnnotationData
import org.aimas.consert.model.annotations.DefaultAnnotationData
import org.aimas.consert.model.annotations.AnnotationUtils


import org.aimas.consert.tests.casas.entitydescriptions.ActivityTriggered

// TODO: import the required intermediary and final ContextAssertions - WriteBirthdayCard

import org.aimas.consert.engine.EventTracker
import org.aimas.consert.utils.AssertionLogger

import java.util.Date;

global EventTracker eventTracker;
global AssertionLogger assertionLogger;


// TODO: set the event role for the intermediary and final ContextAssertions
declare WriteBirthdayCard
    @role(event)
end


// TODO: set fact role for ActivityTriggered("fill_medicine", timestamp)


/*
There are two cases here:
  - a: the person takes the address book and goes with it to the dining table to write and address the letter
  - b: the person has the address book near the dining table, takes it and puts it back again several times depending on what he reads from the address

In the majority of cases the person writes the letter at the dining table.
Since there are no other activities which involve staying for a long time at the dining table, 
a period of staying there for over 1 min is indicative of writing the birthday card (as long as it).

For the case where the puts back the address book after a long while, we will detect the activity retro-actively, but not necessarily along the way if the user
does not stay at the dining room table for a long while (see case of Person 20).

Although the case may be that when staying for a long time at a given place (e.g. dining room table or living room) 
it involves writing the birthday card OR watching the DVD.
*/

rule "Start writing birthday card" 
    when 
        $loc : PersonLocation(location == "LivingRoom" || location == "DiningTable") from entry-point "ExtendedPersonLocationStream"
        $addressBook : Item(sensorId == "address_book", status == "ABSENT", $loc annIncludes this) from entry-point "ItemStream"
        not ( exists Item(sensorId == "address_book", status == "ABSENT", this before[0s, 120s] $addressBook) from entry-point "ItemStream" )
    then
        System.out.println("////// Triggering START WRITE BITHDAY CARD rule following events: " + $loc + ", " + $addressBook "\n");
        
        long ts = drools.getWorkingMemory().getSessionClock().getCurrentTime();
        ActivityTriggered writeCard = new ActivityTriggered("WriteBirthdayCard", ts);
        eventTracker.insertStaticEvent(writeCard);
end



rule "Stop writing birthday card - put back address book after long use" 
    when 
        $activity : ActivityTriggered(name == "WriteBirthdayCard", ts: timestamp)
        $addressBook : Item(sensorId == "address_book", status == "PRESENT", ann : annotations, ann.timestamp - ts >= 60000) from entry-point "ItemStream"
    then
        System.out.println("////// Triggering STOP WRITE BITHDAY CARD 1 rule following events: " + $activity + ", " + $addressBook "\n");
        
        // remove the ActivityTriggered fact
        eventTracker.deleteStaticEvent($activity);
end


rule "Stop writing birthday card - switch location after long stay and write birthday card triggered" 
    when 
        $activity : ActivityTriggered(name == "WriteBirthdayCard", ts: timestamp)
        
        $loc : PersonLocation(newLoc : location, newLoc not in ("LivingRoom", "DiningTable")) from entry-point "ExtendedPersonLocationStream"
        
        exists( PersonLocation(loc : location, loc in ("LivingRoom", "DiningTable"), 
            startTs : startTimestamp, ts - startTs >= 0, ts - startTs <= 60000, 
            this annHappensBefore[0s, 300s] $loc || this annOverlaps[5s] $loc) from entry-point "ExtendedPersonLocationStream"
        )
    then
        System.out.println("////// Triggering STOP WRITE BITHDAY CARD 2 rule following events: " + $activity + ", " + $loc "\n");
        
        // remove the ActivityTriggered fact
        eventTracker.deleteStaticEvent($activity);
end


rule "Actually writing birthday card" 
    when 
        $activity : ActivityTriggered(name == "WriteBirthdayCard", ts : timestamp)
        $loc : PersonLocation(location == "LivingRoom" || location == "DiningTable", 
            locAnn : annotations#DefaultAnnotationData) from entry-point "ExtendedPersonLocationStream"
    then
        System.out.println("////// Triggering ACTUALLY WRITE BITHDAY CARD rule following events: " + $loc + ", " + $addressBook "\n");
        
        long currentTs = drools.getWorkingMemory().getSessionClock().getCurrentTime();
        DefaultAnnotationData cardAnn = new DefaultAnnotationData(currentTs, locAnn.getConfidence(), ts, new Date(currentTs));
        
        WriteBirthdayCard writeCard = new WriteBirthdayCard(cardAnn);
        eventTracker.insertDerivedEvent(writeCard);
end
