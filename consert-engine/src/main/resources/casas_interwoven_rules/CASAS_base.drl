package org.aimas.consert

// Declare Metadata for CASAS events
import org.aimas.consert.tests.casas.assertions.Motion
import org.aimas.consert.tests.casas.assertions.Item
import org.aimas.consert.tests.casas.assertions.Cabinet
import org.aimas.consert.tests.casas.assertions.Water
import org.aimas.consert.tests.casas.assertions.Temperature
import org.aimas.consert.tests.casas.assertions.Burner
import org.aimas.consert.tests.casas.assertions.Phone
import org.aimas.consert.tests.casas.assertions.PersonLocation
import org.aimas.consert.tests.casas.assertions.HandlingFood
import org.aimas.consert.tests.casas.assertions.HeatingFood
import org.aimas.consert.tests.casas.assertions.PhoneCall
import org.aimas.consert.tests.casas.assertions.WatchDVD
import org.aimas.consert.tests.casas.assertions.PreparingSoup
import org.aimas.consert.tests.casas.assertions.ChoosingOutfit
import org.aimas.consert.tests.casas.assertions.ProbablyCleaning
import org.aimas.consert.tests.casas.assertions.Cleaning
import org.aimas.consert.tests.casas.assertions.PersonMoving

import org.aimas.consert.tests.casas.assertions.FillDispenser
import org.aimas.consert.tests.casas.assertions.WriteBirthdayCard
import org.aimas.consert.tests.casas.assertions.WaterPlants
import org.aimas.consert.tests.casas.assertions.SuppliesRetrieved
import org.aimas.consert.tests.casas.entitydescriptions.ActivityTriggered

import org.aimas.consert.model.annotations.AnnotationData
import org.aimas.consert.model.annotations.DefaultAnnotationData
import org.aimas.consert.model.annotations.AnnotationUtils

import org.aimas.consert.engine.core.EventTracker
import org.apache.log4j.Logger


global EventTracker eventTracker;
global Logger generalRuleLogger;

declare Motion
    @role(event)
    //@expires(1m)
    //@timestamp(startTimestamp)
    //@duration(eventDuration)
end


declare Item
    @role(event)
end


declare Cabinet
    @role(event)
end

declare Water
    @role(event)
end


declare Temperature
    @role(event)
end

declare Burner
    @role(event)
end

declare Phone
    @role(event)
end

declare HandlingFood
    @role(event)
end

declare HeatingFood
    @role(event)
end


// =========== BaseEvent insert rules - needed to create the event streams
/*
rule "MotionInsertTest"
    when
        $motion : Motion(id : sensorId, status : status) from entry-point "MotionStream" 
    then
        generalRuleLogger.info("Inserted MOTION event with sensorId: " + id + ", status: " + status + ", timestamp: " + (long)$motion.getStartTimestamp());
end
*/


query activityNotTriggered ($activityName)
     not (exists ActivityTriggered(name == $activityName))
end

rule "ItemInsertTest"
    salience(-10)
    when
        $item : Item(id : sensorId, status : status) from entry-point "ItemStream" 
    then
        generalRuleLogger.info("Inserted ITEM event with sensorId: " + id + ", status: " + status + ", timestamp: " + (long)$item.getStartTimestamp());
end

rule "CabinetInsertTest"
    when
        $cabinet : Cabinet(id : sensorId, status : status) from entry-point "CabinetStream" 
    then
        generalRuleLogger.info("Inserted CABINET event with sensorId: " + id + ", status: " + status + ", timestamp: " + (long)$cabinet.getStartTimestamp());
end

rule "WaterInsertTest"
    when
        $water : Water(id : sensorId, val : value) from entry-point "WaterStream" 
    then
        generalRuleLogger.info("Inserted WATER event with sensorId: " + id + ", value: " + val + ", timestamp: " + (long)$water.getStartTimestamp());
end

rule "TemperatureInsertTest"
    when
        $temp : Temperature(id : sensorId, val : value) from entry-point "TemperatureStream" 
    then
        generalRuleLogger.info("Inserted TEMPERATURE event with sensorId: " + id + ", value: " + val + ", timestamp: " + (long)$temp.getStartTimestamp());
end

rule "BurnerInsertTest"
    when
        $burner : Burner(val : value) from entry-point "BurnerStream" 
    then
        generalRuleLogger.info("Inserted BURNER event with value: " + val + ", timestamp: " + (long)$burner.getStartTimestamp());
end


rule "PhoneInsertTest"
    when
        $phone : Phone(val : status) from entry-point "PhoneStream" 
    then
        generalRuleLogger.info("Inserted PHONE event with value: " + val + ", timestamp: " + (long)$phone.getStartTimestamp());
end

rule "PersonLocationTest"
    salience -10
    when
        $loc : PersonLocation(location : location) from entry-point "PersonLocationStream" 
    then
        generalRuleLogger.info("Inserted PersonLocation event with location: " + location + ", timestamp: " + (long)$loc.getStartTimestamp() + 
        " duration: " + (long)$loc.getEventDuration());
end

rule "PersonLocationExtended"
    salience -10
    when
        $loc : PersonLocation(location : location) from entry-point "ExtendedPersonLocationStream" 
    then
        generalRuleLogger.info("Inserted EXTENDED PersonLocation event with location: " + location + ", timestamp: " + (long)$loc.getStartTimestamp() + 
        " duration: " + (long)$loc.getEventDuration());
end


rule "HandlingFoodTest"
    salience -10
    when
        $food : HandlingFood() from entry-point "HandlingFoodStream" 
    then
        generalRuleLogger.info("Inserted HandlingFood event with: " + $food + ", timestamp: " + (long)$food.getStartTimestamp() + 
        " duration: " + (long)$food.getEventDuration());
end

rule "ExtendedHandlingFood"
    salience -10
    when
        $food : HandlingFood() from entry-point "ExtendedHandlingFoodStream" 
    then
        generalRuleLogger.info("Inserted EXTENDED HandlingFood event with: " + $food + ", timestamp: " + (long)$food.getStartTimestamp() + 
        " duration: " + (long)$food.getEventDuration());
end


rule "HeatingFoodTest"
    salience -10
    when
        $food : HeatingFood() from entry-point "HeatingFoodStream" 
    then
        generalRuleLogger.info("Inserted HeatingFood event with: " + $food + ", timestamp: " + (long)$food.getStartTimestamp() + 
        " duration: " + (long)$food.getEventDuration());
end


rule "ExtendedHeatingFoodTest"
    salience -10
    when
        $food : HeatingFood() from entry-point "ExtendedHeatingFoodStream" 
    then
        generalRuleLogger.info("Inserted ExtendedHeatingFood event with: " + $food + ", timestamp: " + (long)$food.getStartTimestamp() + 
        " duration: " + (long)$food.getEventDuration());
end

rule "PhoneCallTest"
    salience -10
    when
        $phone : PhoneCall() from entry-point "PhoneCallStream" 
    then
        generalRuleLogger.info("Inserted PhoneCall event with: " + $phone + ", timestamp: " + (long)$phone.getStartTimestamp() + 
        " duration: " + (long)$phone.getEventDuration());
end


rule "ExtendedPhoneCall"
    salience -10
    when
        $phone : PhoneCall() from entry-point "ExtendedPhoneCallStream"
    then
        generalRuleLogger.info("Inserted ExtendedPhoneCall event with: " + $phone + ", timestamp: " + (long)$phone.getStartTimestamp() +
        " duration: " + (long)$phone.getEventDuration());
end


rule "ProbablyCleaningTest"
    salience -10
    when
        $probCleaning : ProbablyCleaning() from entry-point "ProbablyCleaningStream" 
    then
        generalRuleLogger.info("Inserted ProbablyCleaning event with: " + $probCleaning + ", timestamp: " + (long)$probCleaning.getStartTimestamp() + 
        " duration: " + (long)$probCleaning.getEventDuration());
end

rule "WatchDVDTest"
    salience -10
    when
        $watchDVD : WatchDVD() from entry-point "WatchDVDStream"
    then
        generalRuleLogger.info("Inserted WATCH DVD event with: " + $watchDVD + ", timestamp: " + (long)$watchDVD.getStartTimestamp() +
        " duration: " + (long)$watchDVD.getEventDuration());
end

rule "ExtendedWatchDVD"
    salience -10
    when
        $watchDVD : WatchDVD() from entry-point "ExtendedWatchDVDStream"
    then
        generalRuleLogger.info("Inserted EXTENDED  WATCH DVD event with: " + $watchDVD + ", timestamp: " + (long)$watchDVD.getStartTimestamp() +
        " duration: " + (long)$watchDVD.getEventDuration());
end

rule "FillDispenserTest"
    salience -10
    when
        $fillDispenser : FillDispenser() from entry-point "FillDispenserStream"
    then
        generalRuleLogger.info("Inserted FillDispenser event with: " + $fillDispenser + ", timestamp: " + (long)$fillDispenser.getStartTimestamp() + 
        " duration: " + (long)$fillDispenser.getEventDuration());
end

rule "ExtendedFillDispenser"
    salience -10
    when
        $fillDispenser : FillDispenser() from entry-point "ExtendedFillDispenserStream"
    then
        generalRuleLogger.info("Inserted EXTENDED FillDispenser event with: " + $fillDispenser + ", timestamp: " + (long)$fillDispenser.getStartTimestamp() + 
        " duration: " + (long)$fillDispenser.getEventDuration());
end

rule "PreparingSoupTest"
    salience -10
    when
        $PreparingSoup : PreparingSoup() from entry-point "PreparingSoupStream"
    then
        generalRuleLogger.info("Inserted PreparingSoup event with: " + $PreparingSoup + ", timestamp: " + (long)$PreparingSoup.getStartTimestamp() +
        " duration: " + (long)$PreparingSoup.getEventDuration());
end

rule "ExtendedPreparingSoup"
    salience -10
    when
        $PreparingSoup : PreparingSoup() from entry-point "ExtendedPreparingSoupStream"
    then
        generalRuleLogger.info("Inserted EXTENDED PreparingSoup event with: " + $PreparingSoup + ", timestamp: " + (long)$PreparingSoup.getStartTimestamp() +
        " duration: " + (long)$PreparingSoup.getEventDuration());
end

rule "WriteBirthdayCard"
    salience -10
    when
        $card : WriteBirthdayCard() from entry-point "WriteBirthdayCardStream"
    then
        generalRuleLogger.info("Inserted WriteBirthdayCard event with: " + $card + ", timestamp: " + (long)$card.getStartTimestamp() + 
        " duration: " + (long)$card.getEventDuration());
end

rule "ExtendedWriteBirthdayCard"
    salience -10
    when
        $card : WriteBirthdayCard() from entry-point "ExtendedWriteBirthdayCardStream"
    then
        generalRuleLogger.info("Inserted EXTENDED WriteBirthdayCard event with: " + $card + ", timestamp: " + (long)$card.getStartTimestamp() +
        " duration: " + (long)$card.getEventDuration());
end

rule "ChoosingOutfitTest"
    salience -10
    when
        $ChoosingOutfit : ChoosingOutfit() from entry-point "ChoosingOutfitStream"
    then
        generalRuleLogger.info("Inserted ChoosingOutfit event with: " + $ChoosingOutfit + ", timestamp: " + (long)$ChoosingOutfit.getStartTimestamp() +
        " duration: " + (long)$ChoosingOutfit.getEventDuration());
end

rule "ExtendedChoosingOutfit"
    salience -10
    when
        $ChoosingOutfit : ChoosingOutfit() from entry-point "ExtendedChoosingOutfitStream"
    then
        generalRuleLogger.info("Inserted EXTENDED ChoosingOutfit event with: " + $ChoosingOutfit + ", timestamp: " + (long)$ChoosingOutfit.getStartTimestamp() +
        " duration: " + (long)$ChoosingOutfit.getEventDuration());
end

rule "CleaningTest"
    salience -10
    when
        $Cleaning : Cleaning() from entry-point "CleaningStream"
    then
        generalRuleLogger.info("Inserted Cleaning event with: " + $Cleaning + ", timestamp: " + (long)$Cleaning.getStartTimestamp() +
        " duration: " + (long)$Cleaning.getEventDuration());
end

rule "ExtendedCleaningOutfit"
    salience -10
    when
        $Cleaning : Cleaning() from entry-point "ExtendedCleaningStream"
    then
        generalRuleLogger.info("Inserted EXTENDED Cleaning event with: " + $Cleaning + ", timestamp: " + (long)$Cleaning.getStartTimestamp() +
        " duration: " + (long)$Cleaning.getEventDuration());
end

rule "WaterPlants"
    salience -10
    when
        $plants : WaterPlants() from entry-point "WaterPlantsStream"
    then
        generalRuleLogger.info("Inserted WaterPlants event with: " + $plants + ", timestamp: " + (long)$plants.getStartTimestamp() + 
        " duration: " + (long)$plants.getEventDuration());
end



rule "ExtendedWaterPlants"
    salience -10
    when
        $plants : WaterPlants() from entry-point "ExtendedWaterPlantsStream"
    then
        generalRuleLogger.info("Inserted EXTENDED WaterPlants event with: " + $plants + ", timestamp: " + (long)$plants.getStartTimestamp() + 
        " duration: " + (long)$plants.getEventDuration());
end


rule "SuppliesRetrieved"
    salience -10
    when 
        $supplies : SuppliesRetrieved() from entry-point "SuppliesRetrievedStream"
    then
        generalRuleLogger.info("Inserted SuppliesRetrieved event with: " + $supplies + ", timestamp: " + (long)$supplies.getStartTimestamp() + 
        " duration: " + (long)$supplies.getEventDuration());
end


rule "PersonMovingTest"
    salience -10
    when 
        $moving : PersonMoving() from entry-point "PersonMovingStream"
    then
        generalRuleLogger.info("Inserted PersonMoving event with: " + $moving + ", timestamp: " + (long)$moving.getStartTimestamp() + 
        " duration: " + (long)$moving.getEventDuration());
end

rule "ExtendedPersonMovingTest"
    salience -10
    when 
        $moving : PersonMoving() from entry-point "ExtendedPersonMovingStream"
    then
        generalRuleLogger.info("Inserted EXTENDED PersonMoving event with: " + $moving + ", timestamp: " + (long)$moving.getStartTimestamp() + 
        " duration: " + (long)$moving.getEventDuration());
end


/*rule "Cleaning"
    salience -10
    when
        $clean : Cleaning() from entry-point "CleaningStream"
    then
        generalRuleLogger.info("Inserted Cleaning event with: " + $clean + ", timestamp: " + (long)$clean.getStartTimestamp() + 
        " duration: " + (long)$clean.getEventDuration());
end



rule "ExtendedCleaning"
    salience -10
    when
        $clean : Cleaning() from entry-point "ExtendedCleaningStream"
    then
        generalRuleLogger.info("Inserted EXTENDED Cleaning event with: " + $clean + ", timestamp: " + (long)$clean.getStartTimestamp() + 
        " duration: " + (long)$clean.getEventDuration());
end*/
